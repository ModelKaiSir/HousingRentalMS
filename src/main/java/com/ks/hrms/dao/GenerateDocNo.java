package com.ks.hrms.dao;

import org.apache.log4j.Logger;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.Arrays;


public class GenerateDocNo implements AutoGenerateDocNo {

    static final String REPLACE_DOCTYPE_CONFIG = "REPLACE INTO DOCNUMBER VALUES(?,?,?)";
    static final String QUERY_DOCTYPE = "SELECT XF_DOCKEY,XF_NEXTNUMBER FROM DOCNUMBER WHERE XF_DOCTYPE = ?";

    static final String DEF_DOC_KEY = "DOC|9999|1,1";

    Logger logger = Logger.getLogger(GenerateDocNo.class);

    protected JdbcTemplate template = null;

    public GenerateDocNo(JdbcTemplate template) {
        this.template = template;
    }

    protected String parsDocType(String docType, String docKey, int nextNumber){
        String[] params = docKey.split("\\|");
        if(null!=params){
            String prefix = params[0];
            String docRule = params[1];
            Character[] charObjectArray = docRule.chars().mapToObj(c -> (char)c).toArray(Character[]::new);
            //
            long length = Arrays.stream(charObjectArray).filter(i ->{
                return i.equals('9');
            }).count();

            String numberRule = params[2];
            String[] numberRules = numberRule.split(",");
            int docNo = 0,nowNo = 0,addNo = 0;
            nowNo = new Integer(numberRules[0]);
            addNo = new Integer(numberRules[1]);

            if(nextNumber!=nowNo){
                docNo = nextNumber;
            }else{
                docNo = nowNo;
            }

            nextNumber+= addNo;
            String format = "%s%0"+length+"d";
            String result = String.format(format,prefix,docNo);
            logger.info("GENERATE DOCNO:"+result);
            replaceDocNo(docType,docKey,nextNumber);
            return result;
        }
        return "";
    }

    protected void replaceDocNo(String docType){
        int nextNumber = 1;
        replaceDocNo(docType,DEF_DOC_KEY,nextNumber);
    }

    protected void replaceDocNo(String docType,String docKey,int nextNumber){
        template.update(REPLACE_DOCTYPE_CONFIG, docType,docKey,nextNumber);
    }

    @Override
    public String getDocNo(String docType) {
        String docNo = template.query(QUERY_DOCTYPE,(resultSet) -> {
            String docKey = resultSet.getString(1);
            int nextNumber = resultSet.getInt(2);
            return parsDocType(docType,docKey,nextNumber);
        },docType);

        if(null==docNo){
            replaceDocNo(docType);
            return getDocNo(docType);
        }else{
            return docNo;
        }
    }
}
